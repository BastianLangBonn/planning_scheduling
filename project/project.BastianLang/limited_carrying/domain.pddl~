(define (domain domain)
	(:requirements :adl) 
	(:types station item robot capacity - object
		s1 s2 s3 s4 s5 s6 - station
		o1 o2 o3 o4 o5 o6 o7 o8 - item
	)
	(:predicates 	
			(robot_capacity ?r - robot ?c - capacity)
			(robot_carries ?r - robot ?c - capacity)
			(at_location ?o - object ?s - station)
			(grapped ?r - robot ?o - item)
			(staged ?r - robot ?o - item)
			(gripper_free ?r - robot)
			(end_of_line ?o - item)
			(part_of_line ?o - item)
			(line ?o1 ?o2 - item ?s - station)
			(preceding_capacities ?c1 ?c2 - capacity)
	)
	(:functions
		(distance ?from ?to)
		(total-cost)
	)
	(:action move
		:parameters 	(?r - robot ?from ?to - station)
		:precondition 	(at_location ?r ?from)
		:effect 	(and (at_location ?r ?to) 
				(not (at_location ?r ?from))
				(increase (total-cost)(distance ?from ?to))
				)
	)
	(:action pick
		:parameters 	(?r - robot ?o - item ?s - station ?current ?next - capacity)
		:precondition 	(and (gripper_free ?r)
				(robot_carries ?r ?current)
				(not(robot_capacity ?r ?current))
				(preceding_capacities ?current ?next)
				(at_location ?r ?s) 
				(at_location ?o ?s) 
				(not(part_of_line ?o))
				)
		:effect 	(and 
				(not(gripper_free ?r)) 
				(not(at_location ?o ?s))
				(grapped ?r ?o)
				(not(robot_carries ?r ?current))
				(robot_carries ?r ?next)
				)
	)	
	(:action place
		:parameters 	(?r - robot ?o - item ?s - station ?c1 ?c2 - capacity)
		:precondition 	(and (at_location ?r ?s) 
				(grapped ?r ?o)
				(robot_carries ?r ?c2)
				(preceding_capacities ?c1 ?c2)
				)
		:effect 	(and (gripper_free ?r) 
				(at_location ?o ?s) 
				(not (grapped ?r ?o))
				(not(robot_carries ?r ?c2))
				(robot_carries ?r ?c1)			
				)
	)
	(:action align_with_object
		:parameters 	(?r - robot ?o ?o_new - item ?s - station ?c1 ?c2 - capacity)
		:precondition 	(and 
				(at_location ?r ?s) 
				(at_location ?o ?s) 
				(grapped ?r ?o_new) 
				(not(part_of_line ?o))
				(preceding_capacities ?c1 ?c2)
				(robot_carries ?r ?c2)
				)
		:effect		(and (gripper_free ?r) 
				(line ?o ?o_new ?s) 
				(not(grapped ?r ?o_new)) 
				(at_location ?o_new ?s) 
				(end_of_line ?o_new) 
				(part_of_line ?o) 
				(part_of_line ?o_new)
				(not(robot_carries ?r ?c2))
				(robot_carries ?r ?c1)
				)
	)
	(:action add_to_line
		:parameters 	(?r - robot ?o1 ?o2 ?o_new - item ?s - station ?c1 ?c2 - capacity)
		:precondition	(and 
				(at_location ?r ?s) 
				(grapped ?r ?o_new) 
				(at_location ?o1 ?s) 
				(at_location ?o2 ?s) 
				(end_of_line ?o2) 
				(line ?o1 ?o2 ?s)
				(preceding_capacities ?c1 ?c2)
				(robot_carries ?r ?c2)
				)
		:effect (and 	(gripper_free ?r) 
				(at_location ?o_new ?s) 
				(not(grapped ?r o_new))
				(line ?o2 ?o_new ?s)
				(line ?o1 ?o2 ?o_new ?s) 
				(end_of_line ?o_new) 
				(not(end_of_line ?o2))
				(part_of_line ?o_new)	
				(not(robot_carries ?r ?c2))
				(robot_carries ?r ?c1)		
			)
	)
	(:action stage
		:parameters 	(?r - robot ?o - item)
		:precondition 	(and (grapped ?r ?o))			 	 
		:effect 	(and (staged ?r ?o)(gripper_free ?r) (not(grapped ?r ?o)))
	)
	(:action unstage
		:parameters 	(?r - robot ?o - item)
		:precondition 	(and (staged ?r ?o) (gripper_free ?r))
		:effect 	(and (not(staged ?r ?o)) (grapped ?r ?o) (not(gripper_free ?r)))
	)
)
